<metro:MetroWindow x:Class="SylphyHorn.UI.SettingsWindow"
				   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				   xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
				   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				   xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
				   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
				   xmlns:metro2="http://schemes.grabacr.net/winfx/2015/personal/controls"
				   xmlns:root="clr-namespace:SylphyHorn"
				   xmlns:properties="clr-namespace:SylphyHorn.Properties"
				   xmlns:serialization="clr-namespace:SylphyHorn.Serialization"
				   xmlns:ui="clr-namespace:SylphyHorn.UI"
				   xmlns:bindings="clr-namespace:SylphyHorn.UI.Bindings"
				   xmlns:controls="clr-namespace:SylphyHorn.UI.Controls"
				   xmlns:services="clr-namespace:SylphyHorn.Services"
				   mc:Ignorable="d"
				   d:DataContext="{d:DesignInstance bindings:SettingsWindowViewModel}"
				   Icon="/SylphyHorn;component/.assets/app.white.ico"
				   Title="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Title}"
				   Width="760"
				   Height="600"
				   Background="{DynamicResource ThemeBrushKey}"
				   Foreground="{DynamicResource ActiveForegroundBrushKey}"
				   FontFamily="Segoe UI, Meiryo UI"
				   SnapsToDevicePixels="True"
				   UseLayoutRounding="True">

	<i:Interaction.Behaviors>
		<livet:WindowCloseCancelBehavior CloseCanceledCallbackMethodTarget="{Binding}"
										 CloseCanceledCallbackMethodName="CloseCanceledCallback"
										 CanClose="{Binding CanClose}" />
	</i:Interaction.Behaviors>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="ContentRendered">
			<livet:LivetCallMethodAction MethodTarget="{Binding}"
										 MethodName="Initialize" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closed">
			<livet:DataContextDisposeAction />
		</i:EventTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.WindowAction">
			<livet:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition.Child">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="True" />
		</livet:InteractionMessageTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.OpenBackgroundImagesDialog.Open">
			<livet:OpenFileDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.OpenImportPathDialog.Open">
			<livet:OpenFileDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.OpenExportPathDialog.Open">
			<livet:SaveFileDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.ResetSettingsDialog.Confirm">
			<livet:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.OverrideDesktopsDialog.Confirm">
			<livet:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>
	</i:Interaction.Triggers>

	<DockPanel>
		<!-- #region Caption area -->
		<DockPanel DockPanel.Dock="Top"
				   metro:MetroWindow.IsCaptionBar="True">
			<Border DockPanel.Dock="Bottom"
					Height="8" />

			<StackPanel DockPanel.Dock="Right"
						Orientation="Horizontal"
						HorizontalAlignment="Right"
						VerticalAlignment="Top"
						WindowChrome.IsHitTestVisibleInChrome="True">
				<metro:SystemButtons />
			</StackPanel>
			<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Title}"
					   FontFamily="Segoe UI Light, Meiryo UI"
					   FontSize="18"
					   Margin="12,8" />
		</DockPanel>
		<!-- #endregion -->

		<TabControl Style="{DynamicResource VerticalTabControlStyleKey}">
			<TabControl.Resources>
				<Style TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource ForegroundBrushKey}" />
					<Setter Property="VerticalAlignment"
							Value="Center" />
					<Setter Property="Margin"
							Value="0,2" />
				</Style>
				<Style x:Key="HeaderStyleKey"
					   TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource AccentBrushKey}" />
					<Setter Property="FontFamily"
							Value="Segoe UI Light, Meiryo UI" />
					<Setter Property="FontSize"
							Value="18" />
					<Setter Property="Margin"
							Value="0,8" />
				</Style>
				<Style x:Key="SubHeaderStyleKey"
					   TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource ForegroundBrushKey}" />
					<Setter Property="FontWeight"
							Value="SemiBold" />
					<Setter Property="Margin"
							Value="8,4,8,4" />
					<Setter Property="FontSize"
							Value="13" />
					<Style.Triggers>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Foreground"
									Value="{DynamicResource InactiveForegroundBrushKey}" />
						</Trigger>
					</Style.Triggers>
				</Style>
				<Style x:Key="TabitemStyleKey"
					   TargetType="{x:Type TextBlock}"
					   BasedOn="{StaticResource VerticalTabHeaderTextStyleKey}">
					<Setter Property="FontFamily"
							Value="Segoe UI Light, Meiryo UI" />
					<Setter Property="FontSize"
							Value="16" />
				</Style>

				<Style x:Key="ReadOnlyConsoleTextBoxStyle"
					   TargetType="{x:Type TextBox}"
					   BasedOn="{StaticResource {x:Type TextBox}}">
					<Setter Property="BorderThickness"
							Value="0" />
					<Setter Property="IsReadOnly"
							Value="True" />
					<Setter Property="TextWrapping"
							Value="Wrap" />
					<Setter Property="Background"
							Value="Transparent" />
					<Setter Property="Foreground"
							Value="{DynamicResource ForegroundBrushKey}" />
					<Setter Property="FontFamily"
							Value="Consolas" />
					<Setter Property="VerticalContentAlignment"
							Value="Center" />
				</Style>
			</TabControl.Resources>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_General}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_DesktopSwitching}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<StackPanel Margin="8,0,0,0">
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=LoopDesktop.Value, Mode=TwoWay}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_DesktopSwitching_Loop}" />
							</CheckBox>
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=OverrideWindowsDefaultKeyCombination.Value, Mode=TwoWay}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_DesktopSwitching_OverrideOS}" />
							</CheckBox>
						</StackPanel>
						<Border Height="8" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<StackPanel Margin="8,0,0,0">
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=NotificationWhenSwitchedDesktop.Value, Mode=TwoWay}">
								<TextBlock>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification_Display, Mode=OneWay}" />
								</TextBlock>
							</CheckBox>
							<TextBlock Margin="21,0,0,0">
								<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification_Display_Duration, Mode=OneWay}" />
								<InlineUIContainer>
									<metro:PromptTextBox Text="{Binding Source={x:Static serialization:Settings.General}, Path=NotificationDuration.Value, Mode=TwoWay}"
														 Prompt=""
														 Width="60"
														 Margin="2,2,2,-7"
														 IsEnabled="{Binding Source={x:Static serialization:Settings.General}, Path=NotificationWhenSwitchedDesktop.Value, Mode=TwoWay}" />
								</InlineUIContainer>
								<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification_Display_Duration_Milliseconds, Mode=OneWay}" />
							</TextBlock>
						</StackPanel>
						<StackPanel Margin="8,8,0,0">
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=AlwaysShowDesktopNotification.Value, Mode=TwoWay}">
								<TextBlock>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification_AlwaysShowDesktop, Mode=OneWay}" />
								</TextBlock>
							</CheckBox>
						</StackPanel>
						<Border Height="8" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_TrayIcon}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<StackPanel Margin="8,0,0,0">
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=TrayShowDesktop.Value, Mode=TwoWay}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ToggleTrayIconInfo}" />
							</CheckBox>
						</StackPanel>
						<StackPanel Margin="8,0,0,0">
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=TrayShowOnlyCurrentNumber.Value, Mode=TwoWay}"
									  IsEnabled="{Binding Source={x:Static serialization:Settings.General}, Path=TrayShowDesktop.Value, Mode=OneWay}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ShowOnlyCurrentNumberInTray}" />
							</CheckBox>
						</StackPanel>
						<Border Height="8" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Startup}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<StackPanel Margin="8,0,0,0">
							<CheckBox IsChecked="{Binding HasStartupLink, Mode=TwoWay}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Startup_Automaticaly}" />
							</CheckBox>
						</StackPanel>
						<StackPanel Margin="8,0,0,0">
							<CheckBox IsChecked="{Binding HasStartupScheduler, Mode=TwoWay}" IsEnabled="{Binding IsStartupSchedulerEnabled}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Startup_Automaticaly_As_Admin}" />
							</CheckBox>
						</StackPanel>
						<Border Height="8" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Language}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<StackPanel Margin="8,0,0,0">
							<metro:PromptComboBox ItemsSource="{Binding Cultures}"
												  DisplayMemberPath="Display"
												  SelectedValuePath="Value"
												  SelectedValue="{Binding Culture, Mode=TwoWay}"
												  Prompt=""
												  IsReadOnly="True"
												  MinWidth="250"
												  Margin="1,0,0,0"
												  HorizontalAlignment="Left" />
							<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Language_RequireRestartMessage}"
									   Visibility="{Binding RestartRequired, Converter={StaticResource BooleanToVisibilityConverter}}"
									   Margin="3,2,0,0" />
						</StackPanel>
						<Border Height="8" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ManagingSettings}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<StackPanel Margin="8,0,0,0">
							<Grid Margin="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="4" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="4" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<metro2:CallMethodButton Grid.Column="0"
														 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ManagingSettings_Export}"
														 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ManagingSettings_ExportDetail}"
														 MethodTarget="{Binding}"
														 MethodName="OpenExportPathDialog"
														 HorizontalAlignment="Left"
														 Margin="2" />
								<metro2:CallMethodButton Grid.Column="2"
														 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ManagingSettings_Import}"
														 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ManagingSettings_ImportDetail}"
														 MethodTarget="{Binding}"
														 MethodName="OpenImportPathDialog"
														 HorizontalAlignment="Left"
														 Margin="2" />
								<metro2:CallMethodButton Grid.Column="4"
														 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ManagingSettings_Reset}"
														 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ManagingSettings_ResetDetail}"
														 MethodTarget="{Binding}"
														 MethodName="ResetSettings"
														 HorizontalAlignment="Left"
														 Margin="2" />
							</Grid>
						</StackPanel>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Auto"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_Settings}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<StackPanel Margin="8,0,0,0" Grid.IsSharedSizeScope="True">
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=OverrideDesktopsOnStartup.Value, Mode=TwoWay}"
									  IsEnabled="{Binding IsNameSupport}"
									  Visibility="{Binding IsNameSupport, Converter={StaticResource BooleanToVisibilityConverter}}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_OverrideSettingsOnStartup}" />
							</CheckBox>
							<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=ChangeBackgroundEachDesktop.Value, Mode=TwoWay}"
									  IsEnabled="{Binding IsWindows10OrEarlier}"
									  Visibility="{Binding IsWindows10OrEarlier, Converter={StaticResource BooleanToVisibilityConverter}}">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Background_ChangeBackground}" />
							</CheckBox>
							<Border Height="8" />
							<TextBlock TextWrapping="Wrap"
									   Margin="20,0,0,0">
								<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Background_Note1, Mode=OneWay}" />
								<Run Text="{Binding Source={x:Static services:WallpaperService.SupportedFileTypes}, Mode=OneWay, Converter={StaticResource ArrayToStringConverter}}" />
							</TextBlock>
							<Grid Margin="0,8,0,0">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Grid Grid.Row="0"
									  Margin="0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition SharedSizeGroup="DesktopColumn" />
									</Grid.ColumnDefinitions>
									<ItemsControl ItemsSource="{Binding Desktops, Mode=TwoWay}"
												  Grid.Row="0">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<UniformGrid Columns="1" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" />
														<ColumnDefinition Width="2" />
														<ColumnDefinition Width="316" />
														<ColumnDefinition Width="Auto" />
														<ColumnDefinition Width="124" />
													</Grid.ColumnDefinitions>
													<Grid.RowDefinitions>
														<RowDefinition Height="*" />
														<RowDefinition Height="*" />
														<RowDefinition Height="*" />
														<RowDefinition Height="*" />
													</Grid.RowDefinitions>

													<Border Height="12" Grid.Row="0" Grid.ColumnSpan="4" />

													<TextBlock Grid.Row="1"
															   Grid.Column="0"
															   VerticalAlignment="Center"
															   Foreground="{DynamicResource ForegroundBrushKey}">
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0} {1}: ">
																<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
																<Binding Path="NumberText" />
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
													<metro:PromptTextBox Grid.Row="1"
																		 Grid.Column="2"
																		 Text="{Binding Path='Name', Mode=TwoWay}"
																		 Prompt="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_DesktopNames}"
																		 MaxWidth="312"
																		 Margin="2" />
													<metro2:CallMethodButton Grid.Row="1" Grid.Column="3"
																			 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_CloseDesktop}"
																			 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_CloseDesktop_CloseThisDesktop}"
																			 MethodTarget="{Binding}"
																			 MethodName="Close"
																			 Margin="2" />

													<TextBlock Grid.Row="2"
															   Grid.Column="0"
															   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Background_Image}"
															   VerticalAlignment="Center"
															   Foreground="{DynamicResource ForegroundBrushKey}" />
													<metro:PromptTextBox Grid.Row="2"
																		 Grid.Column="2"
																		 Text="{Binding WallpaperPath, Mode=TwoWay}"
																		 Prompt="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Background_SourceImageFile}"
																		 IsEnabled="{Binding IsWallpaperEnabled}"
																		 MaxWidth="312"
																		 Margin="2" />
													<metro2:CallMethodButton Grid.Row="2" Grid.Column="3"
																			 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_Reference}"
																			 MethodTarget="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																			 MethodName="OpenBackgroundPathDialog"
																			 MethodParameter="{Binding Index}"
																			 IsEnabled="{Binding IsWallpaperEnabled}"
																			 Margin="2" />

													<TextBlock Grid.Row="3"
															   Grid.Column="0"
															   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Background_Position}"
															   VerticalAlignment="Center"
															   Foreground="{DynamicResource ForegroundBrushKey}" />
													<Grid Grid.Row="3"
														  Grid.Column="2"
														  Grid.ColumnSpan="2">
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="*" MinWidth="144"/>
															<ColumnDefinition Width="*" MinWidth="58" />
															<ColumnDefinition Width="*" MinWidth="24" MaxWidth="48" />
															<ColumnDefinition Width="*" MinWidth="24" MaxWidth="48" />
															<ColumnDefinition Width="*" MinWidth="24" MaxWidth="48" />
															<ColumnDefinition Width="*" MinWidth="24" MaxWidth="48" />
														</Grid.ColumnDefinitions>
														<metro:PromptComboBox Grid.Column="0"
																			  ItemsSource="{Binding Path=DataContext.WallpaperPositions, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																			  DisplayMemberPath="Display"
																			  SelectedValuePath="Value"
																			  SelectedValue="{Binding Path=Wallpaper.Position, Mode=TwoWay}"
																			  Prompt=""
																			  IsEnabled="{Binding IsWallpaperEnabled}"
																			  IsReadOnly="True"
																			  MinWidth="140"
																			  MaxWidth="250"
																			  Margin="2"
																			  HorizontalAlignment="Stretch" />
														<TextBlock Grid.Column="1"
																   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_Reorder}"
																   VerticalAlignment="Center"
																   HorizontalAlignment="Right"
																   Visibility="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"
																   Margin="0,0,2,0"
																   Foreground="{DynamicResource ForegroundBrushKey}" />
														<metro2:CallMethodButton Grid.Column="2"
																				 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_MoveDesktopPrevious}"
																				 MethodTarget="{Binding}"
																				 MethodName="MoveToPrevious"
																				 IsEnabled="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																				 Visibility="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"
																				 Margin="2"
																				 Padding="0">
															<ContentControl.Content>
																<Path Fill="{DynamicResource ForegroundBrushKey}"
																	  Stretch="Uniform"
																	  Data="M0,9 L6,1 L12,9 z" />
															</ContentControl.Content>
														</metro2:CallMethodButton>
														<metro2:CallMethodButton Grid.Column="3"
																				 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_MoveDesktopNext}"
																				 MethodTarget="{Binding}"
																				 MethodName="MoveToNext"
																				 IsEnabled="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																				 Visibility="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"
																				 Margin="2"
																				 Padding="0">
															<ContentControl.Content>
																<Path Fill="{DynamicResource ForegroundBrushKey}"
																	  Stretch="Uniform"
																	  Data="M0,1 L6,9 L12,1 z" />
															</ContentControl.Content>
														</metro2:CallMethodButton>
														<metro2:CallMethodButton Grid.Column="4"
																				 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_MoveDesktopFirst}"
																				 MethodTarget="{Binding}"
																				 MethodName="MoveToFirst"
																				 IsEnabled="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																				 Visibility="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"
																				 Margin="2"
																				 Padding="0">
															<ContentControl.Content>
																<Path Fill="{DynamicResource ForegroundBrushKey}"
																	  Stretch="Uniform"
																	  Data="M0,12 L6,6 L0,6 L6,0 L12,6 L6,6 L12,12 z" />
															</ContentControl.Content>
														</metro2:CallMethodButton>
														<metro2:CallMethodButton Grid.Column="5"
																				 ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_MoveDesktopLast}"
																				 MethodTarget="{Binding}"
																				 MethodName="MoveToLast"
																				 IsEnabled="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																				 Visibility="{Binding Path=DataContext.IsReorderingSupport, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"
																				 Margin="2"
																				 Padding="0">
															<ContentControl.Content>
																<Path Fill="{DynamicResource ForegroundBrushKey}"
																	  Stretch="Uniform"
																	  Data="M0,0 L6,6 L0,6 L6,12 L12,6 L6,6 L12,0 z" />
															</ContentControl.Content>
														</metro2:CallMethodButton>
													</Grid>

													<Canvas Grid.RowSpan="3"
															Grid.Row="1"
															Grid.Column="4"
															Margin="4,1,0,0">
														<Rectangle Fill="{Binding Path=DataContext.PreviewBackgroundBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																   Width="120"
																   Height="78" />
														<Image Source="{Binding WallpaperPathOrDefault, Converter={StaticResource UnlockImageConverter}, IsAsync=True}"
															   Stretch="UniformToFill"
															   VerticalAlignment="Top"
															   Width="120"
															   Height="78" />
														<Rectangle Fill="{Binding Path=DataContext.PreviewBackgroundBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																   Visibility="{Binding HasNoWallpaper, Converter={StaticResource BooleanToVisibilityConverter}}"
																   Width="120"
																   Height="78"
																   Opacity="0.6" />
														<Grid x:Name="PreviewRoot"
															  Width="20"
															  Height="20"
															  Canvas.Left="0"
															  Canvas.Top="0">
															<ContentControl Width="20"
																			Height="20"
																			ClipToBounds="True">
																<ContentControl.CacheMode>
																	<BitmapCache RenderAtScale="0.2" />
																</ContentControl.CacheMode>
																<Rectangle Fill="{Binding Path=DataContext.NotificationBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																		   VerticalAlignment="Top"
																		   Width="120"
																		   Height="78">
																	<Rectangle.Effect>
																		<BlurEffect Radius="20" />
																	</Rectangle.Effect>
																</Rectangle>
															</ContentControl>
															<Border Background="{Binding Path=DataContext.NotificationBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
															<DockPanel VerticalAlignment="Center"
																	   HorizontalAlignment="Center"
																	   Margin="0">
																<TextBlock DockPanel.Dock="Top"
																		   Text="{Binding NumberText}"
																		   Foreground="{Binding Path=DataContext.NotificationForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
																		   FontFamily="Segoe UI, Meiryo UI"
																		   FontSize="12"
																		   FontWeight="Normal"
																		   Margin="-1,-1,0,0" />
															</DockPanel>
															<Border BorderBrush="{DynamicResource AccentBrushKey}"
																	SnapsToDevicePixels="True"
																	BorderThickness="0,0,1,1"
																	Opacity="0.5" />
														</Grid>
														<metro2:CallMethodButton ToolTip="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_ClickToSwitchDesktop}"
																				 ToolTipService.HorizontalOffset="30"
																				 ToolTipService.InitialShowDelay="2000"
																				 ToolTipService.ShowDuration="2000"
																				 MethodTarget="{Binding}"
																				 MethodName="Switch"
																				 HorizontalAlignment="Center"
																				 VerticalAlignment="Center"
																				 Width="120"
																				 Height="78"
																				 Margin="0">
															<metro2:CallMethodButton.Style>
																<Style TargetType="{x:Type Button}">
																	<Style.Setters>
																		<Setter Property="Background" Value="Transparent" />
																		<Setter Property="Foreground" Value="Transparent" />
																		<Setter Property="BorderThickness" Value="0" />
																	</Style.Setters>
																	<Style.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />
																			<Setter Property="BorderThickness" Value="2" />
																		</Trigger>
																	</Style.Triggers>
																</Style>
															</metro2:CallMethodButton.Style>
														</metro2:CallMethodButton>
													</Canvas>
												</Grid>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</Grid>


								<Grid Grid.Row="1"
									  Margin="0">
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition SharedSizeGroup="DesktopColumn" />
									</Grid.ColumnDefinitions>
									<Border Grid.Row="0" Height="20" />
									<metro2:CallMethodButton Grid.Row="1"
															 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Desktop_CreateDesktop}"
															 MethodTarget="{Binding}"
															 MethodName="CreateDesktop"
															 Margin="0" />
								</Grid>

							</Grid>
						</StackPanel>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification, StringFormat='{}{0} 1'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Focusable="True">
						<Grid Margin="0,-8,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="210" />
								<ColumnDefinition Width="32" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MultipleDisplays}"
									   Style="{DynamicResource HeaderStyleKey}" />
							<TextBlock Grid.Column="2"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowMinSize}"
									   Style="{DynamicResource HeaderStyleKey}" />
						</Grid>
						<StackPanel Margin="8,0,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="210" />
									<ColumnDefinition Width="32" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<metro:PromptComboBox Grid.Column="0"
													  ItemsSource="{Binding Displays}"
													  DisplayMemberPath="Display"
													  SelectedValuePath="Value"
													  SelectedValue="{Binding Display, Mode=TwoWay}"
													  Prompt=""
													  IsReadOnly="True"
													  IsEnabled="{Binding IsDisplayEnabled}"
													  MinWidth="200"
													  Margin="1,0,0,0"
													  HorizontalAlignment="Left" />
								<TextBlock Grid.Column="2"
										   Margin="1,0,0,0">
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowMinSize_Width, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding NotificationMinWidth, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowMinSize_Width_SimpleMode, StringFormat=({0}, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding SimpleNotificationMinWidth, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowMinSize_Width_PinWindow, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding PinWindowMinWidth, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,-2,-7" />
									</InlineUIContainer>
									<Run Text=") " />
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowMinSize_Height, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding NotificationMinHeight, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
								</TextBlock>
							</Grid>
						</StackPanel>
						<Border Height="8" />

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="210" />
								<ColumnDefinition Width="32" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowPlacement}"
									   Style="{DynamicResource HeaderStyleKey}" />
							<TextBlock Grid.Column="2"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowOffset}"
									   Style="{DynamicResource HeaderStyleKey}" />
						</Grid>
						<StackPanel Margin="8,0,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="210" />
									<ColumnDefinition Width="32" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<metro:PromptComboBox Grid.Column="0"
													  ItemsSource="{Binding Placements}"
													  DisplayMemberPath="Display"
													  SelectedValuePath="Value"
													  SelectedValue="{Binding Placement, Mode=TwoWay}"
													  Prompt=""
													  IsReadOnly="True"
													  MinWidth="200"
													  Margin="1,0,0,0"
													  HorizontalAlignment="Left" />
								<TextBlock Grid.Column="2" VerticalAlignment="Top"
										   Margin="1,0,0,0">
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowOffset_SwitchDesktop, Mode=OneWay}" />
									<InlineUIContainer>
										<Border Width="2" />
									</InlineUIContainer>
									<Run Text="X" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding NotificationOffsetX, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
									<Run Text="Y" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding NotificationOffsetY, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,10,-7" />
									</InlineUIContainer>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowOffset_PinWindow, Mode=OneWay}" />
									<InlineUIContainer>
										<Border Width="2" />
									</InlineUIContainer>
									<Run Text="X" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding PinWindowOffsetX, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
									<Run Text="Y" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding PinWindowOffsetY, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,-2,-7" />
									</InlineUIContainer>
								</TextBlock>
							</Grid>
						</StackPanel>
						<Border Height="8" />

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="210" />
								<ColumnDefinition Width="32" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationWindowStyle}"
									   Style="{DynamicResource HeaderStyleKey}" />
							<TextBlock Grid.Column="2"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification_Others}"
									   Style="{DynamicResource HeaderStyleKey}" />
						</Grid>
						<StackPanel Margin="8,0,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="210" />
									<ColumnDefinition Width="32" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<StackPanel Grid.Column="0"
											Margin="1,0,0,0"
											VerticalAlignment="Top">
									<metro:PromptComboBox ItemsSource="{Binding NotificationWindowStyles}"
														  DisplayMemberPath="Display"
														  SelectedValuePath="Value"
														  SelectedValue="{Binding NotificationWindowStyle, Mode=TwoWay}"
														  Prompt=""
														  IsReadOnly="True"
														  MinWidth="200"
														  Margin="0"
														  VerticalAlignment="Top"
														  HorizontalAlignment="Left" />
									<metro:PromptComboBox ItemsSource="{Binding NotificationCornerStyles}"
														  DisplayMemberPath="Display"
														  SelectedValuePath="Value"
														  SelectedValue="{Binding NotificationCornerStyle, Mode=TwoWay}"
														  Prompt=""
														  IsReadOnly="True"
														  IsEnabled="{Binding IsWindows11OrLater}"
														  MinWidth="200"
														  Margin="0,4,0,0"
														  VerticalAlignment="Top"
														  HorizontalAlignment="Left" />
								</StackPanel>
								<StackPanel Grid.Column="2"
											Margin="1,0,0,0"
											VerticalAlignment="Top">
									<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=SimpleNotification.Value, Mode=TwoWay}">
										<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification_SimpleMode}" />
									</CheckBox>
									<CheckBox IsChecked="{Binding Source={x:Static serialization:Settings.General}, Path=UseDesktopName.Value, Mode=TwoWay}">
										<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_DesktopNames_UseDesktopName}" />
									</CheckBox>
								</StackPanel>
							</Grid>
						</StackPanel>
						<Border Height="32" />

						<ui:NotificationPreview />
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Notification, StringFormat='{}{0} 2'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Focusable="True">
						<Grid Margin="0,-8,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="210" />
								<ColumnDefinition Width="32" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationTextAlignment}"
									   Style="{DynamicResource HeaderStyleKey}" />
							<TextBlock Grid.Column="2"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationFontSize}"
									   Style="{DynamicResource HeaderStyleKey}" />
						</Grid>
						<StackPanel Margin="8,0,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="210" />
									<ColumnDefinition Width="32" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<TextBlock Grid.Column="0" VerticalAlignment="Top"
										   Margin="1,0,0,0">
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationTextAlignment_Header, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptComboBox ItemsSource="{Binding NotificationTextAlignments}"
															  DisplayMemberPath="Display"
															  SelectedValuePath="Value"
															  SelectedValue="{Binding NotificationHeaderAlignment, Mode=TwoWay}"
															  Prompt=""
															  IsReadOnly="True"
															  MinWidth="60"
															  Margin="2,0,2,-7"
															  HorizontalAlignment="Left" />
									</InlineUIContainer>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationTextAlignment_Body, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptComboBox ItemsSource="{Binding NotificationTextAlignments}"
															  DisplayMemberPath="Display"
															  SelectedValuePath="Value"
															  SelectedValue="{Binding NotificationBodyAlignment, Mode=TwoWay}"
															  Prompt=""
															  IsReadOnly="True"
															  MinWidth="60"
															  Margin="2,0,2,-7"
															  HorizontalAlignment="Left" />
									</InlineUIContainer>
								</TextBlock>
								<TextBlock Grid.Column="2" VerticalAlignment="Top"
										   Margin="1,0,0,0">
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationFontSize_Header, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding NotificationHeaderFontSize, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationFontSize_Body, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding NotificationBodyFontSize, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
									<Run Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationFontSize_LineSpacing, Mode=OneWay}" />
									<InlineUIContainer>
										<metro:PromptTextBox Text="{Binding NotificationLineSpacing, Mode=TwoWay, Converter={StaticResource NullableIntToStringConverter}}"
															 Prompt=""
															 Width="34"
															 Margin="2,0,2,-7" />
									</InlineUIContainer>
								</TextBlock>
							</Grid>
						</StackPanel>
						<Border Height="8" />

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="210" />
								<ColumnDefinition Width="32" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0"
									   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_NotificationFontFamily}"
									   Style="{DynamicResource HeaderStyleKey}" />
						</Grid>
						<StackPanel Margin="8,0,0,0">
								<metro:PromptTextBox Text="{Binding NotificationFontFamily, Mode=TwoWay}"
													 MinWidth="462"
													 MaxWidth="640"
													 Margin="1,0,0,0"
													 HorizontalAlignment="Left"
													 VerticalAlignment="Top">
									<metro:PromptTextBox.Prompt>
										<MultiBinding StringFormat="{}{0} ({1}) ">
											<Binding Source="{x:Static serialization:Settings.General}" Path="NotificationFontFamilyDefaultValue" />
											<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Common_Default" />
										</MultiBinding>
									</metro:PromptTextBox.Prompt>
								</metro:PromptTextBox>
						</StackPanel>
						<Border Height="128" />

						<ui:NotificationPreview />
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ShortcutKey, StringFormat='{}{0} 1'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Grid.IsSharedSizeScope="True"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_TaskView}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="2*" />
									<RowDefinition Height="2*" />
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_TaskView_ShowTaskView}" />
								<TextBlock Grid.Row="1"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_TaskView_ShowWindowSwitch}" />
							</Grid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static services:KeyHelper.VirtualDesktopTaskViewKey}, Mode=OneWay}"
														 Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_ProvidedByWinows, StringFormat=' ({0})', Mode=OneWay}"
														 IsReadOnly="True"
														 IsEnabled="False" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=ShowTaskView.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static services:KeyHelper.VirtualDesktopWindowSwitcherKey}, Mode=OneWay}"
														 Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_ProvidedByWinows, StringFormat=' ({0})', Mode=OneWay}"
														 IsReadOnly="True"
														 IsEnabled="False" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=ShowWindowSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchAdjacentDesktop}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="2*" />
									<RowDefinition Height="2*" />
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchAdjacentDesktop_SwitchLeft}" />
								<TextBlock Grid.Row="1"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchAdjacentDesktop_SwitchRight}" />
							</Grid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static services:KeyHelper.VirtualDesktopSwitchLeftKey}, Mode=OneWay}"
														 Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_ProvidedByWinows, StringFormat=' ({0})', Mode=OneWay}"
														 IsReadOnly="True"
														 IsEnabled="False" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwitchToLeft.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static services:KeyHelper.VirtualDesktopSwitchRightKey}, Mode=OneWay}"
														 Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_ProvidedByWinows, StringFormat=' ({0})', Mode=OneWay}"
														 IsReadOnly="True"
														 IsEnabled="False" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwitchToRight.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Previous}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwitchToPrevious.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwitchToIndices.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwitchToIndices.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:ShortcutKeyBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddShortcutList"
													 MethodParameter="SwitchToIndices"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastShortcutList"
													 MethodParameter="SwitchToIndices"
													 IsEnabled="{Binding IsShortcutKeyOfSwitchToIndicesLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeShortcutListToFit"
													 MethodParameter="SwitchToIndices"
													 IsEnabled="{Binding IsShortcutKeyOfSwitchToIndicesLarger}"
													 Margin="0" />
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_CloseDesktop}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="2*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_CloseDesktop_CloseAndSwitchLeft}" />
								<TextBlock Grid.Row="1"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_CloseDesktop_CloseAndSwitchRight}" />
							</Grid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static services:KeyHelper.VirtualDesktopDeletionKey}, Mode=OneWay}"
														 Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_ProvidedByWinows, StringFormat=' ({0})', Mode=OneWay}"
														 IsReadOnly="True"
														 IsEnabled="False" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=CloseAndSwitchLeft.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=CloseAndSwitchRight.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ShortcutKey, StringFormat='{}{0} 2'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Grid.IsSharedSizeScope="True"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_Left}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_LeftAndSwitch}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_Right}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_RightAndSwitch}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveLeft.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveLeftAndSwitch.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveRight.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveRightAndSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop_CreateOnly}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop_Move}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop_MoveAndSwitch}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static services:KeyHelper.VirtualDesktopCreationKey}, Mode=OneWay}"
														 Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_ProvidedByWinows, StringFormat=' ({0})', Mode=OneWay}"
														 IsReadOnly="True"
														 IsEnabled="False" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveNew.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveNewAndSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktop_Previous}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveToPrevious.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveToIndices.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveToIndices.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:ShortcutKeyBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddShortcutList"
													 MethodParameter="MoveToIndices"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastShortcutList"
													 MethodParameter="MoveToIndices"
													 IsEnabled="{Binding IsShortcutKeyOfMoveToIndicesLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeShortcutListToFit"
													 MethodParameter="MoveToIndices"
													 IsEnabled="{Binding IsShortcutKeyOfMoveToIndicesLarger}"
													 Margin="0" />
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktopAndSwitch}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktopAndSwitch_Previous}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveToPreviousAndSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveToIndicesAndSwitch.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=MoveToIndicesAndSwitch.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:ShortcutKeyBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddShortcutList"
													 MethodParameter="MoveToIndicesAndSwitch"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastShortcutList"
													 MethodParameter="MoveToIndicesAndSwitch"
													 IsEnabled="{Binding IsShortcutKeyOfMoveToIndicesAndSwitchLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeShortcutListToFit"
													 MethodParameter="MoveToIndicesAndSwitch"
													 IsEnabled="{Binding IsShortcutKeyOfMoveToIndicesAndSwitchLarger}"
													 Margin="0" />
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ShortcutKey, StringFormat='{}{0} 3'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Grid.IsSharedSizeScope="True"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_Left}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_Right}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_First}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_Last}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwapDesktopLeft.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwapDesktopRight.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwapDesktopFirst.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwapDesktopLast.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapSpecifiedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwapDesktopIndices.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=SwapDesktopIndices.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  IsEnabled="{Binding IsReorderingSupport}"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:ShortcutKeyBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddShortcutList"
													 MethodParameter="SwapDesktopIndices"
													 IsEnabled="{Binding IsReorderingSupport}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastShortcutList"
													 MethodParameter="SwapDesktopIndices"
													 IsEnabled="{Binding IsShortcutKeyOfSwapDesktopIndicesLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeShortcutListToFit"
													 MethodParameter="SwapDesktopIndices"
													 IsEnabled="{Binding IsShortcutKeyOfSwapDesktopIndicesLarger}"
													 Margin="0" />
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ShortcutKey, StringFormat='{}{0} 4'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Focusable="True"
								Grid.IsSharedSizeScope="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinWindow}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Pin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Unpin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinToggle}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=Pin.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=Unpin.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=TogglePin.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinWindowFromApp}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Pin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Unpin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinToggle}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=PinApp.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=UnpinApp.Value, Mode=TwoWay}" />
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=TogglePinApp.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_OperateSylphyHorn}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ShowSettings}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=ShowSettings.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ToggleDesktopNotification}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:ShortcutKeyBox Current="{Binding Source={x:Static serialization:Settings.ShortcutKey}, Path=ToggleDesktopNotification.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MouseShortcut, StringFormat='{}{0} 1'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Grid.IsSharedSizeScope="True"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_TaskView}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_TaskView_ShowTaskView}" />
								<TextBlock Grid.Row="1"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_TaskView_ShowWindowSwitch}" />
							</Grid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=ShowTaskView.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=ShowWindowSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchAdjacentDesktop}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchAdjacentDesktop_SwitchLeft}" />
								<TextBlock Grid.Row="1"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchAdjacentDesktop_SwitchRight}" />
							</Grid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwitchToLeft.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwitchToRight.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Previous}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwitchToPrevious.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwitchToIndices.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwitchToIndices.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:MouseShortcutBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddMouseList"
													 MethodParameter="SwitchToIndices"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastMouseList"
													 MethodParameter="SwitchToIndices"
													 IsEnabled="{Binding IsMouseOfSwitchToIndicesLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeMouseListToFit"
													 MethodParameter="SwitchToIndices"
													 IsEnabled="{Binding IsMouseOfSwitchToIndicesLarger}"
													 Margin="0" />
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_CloseDesktop}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_CloseDesktop_CloseAndSwitchLeft}" />
								<TextBlock Grid.Row="1"
										   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_CloseDesktop_CloseAndSwitchRight}" />
							</Grid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=CloseAndSwitchLeft.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=CloseAndSwitchRight.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MouseShortcut, StringFormat='{}{0} 2'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Grid.IsSharedSizeScope="True"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_Left}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_LeftAndSwitch}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_Right}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToAdjacentDesktop_RightAndSwitch}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveLeft.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveLeftAndSwitch.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveRight.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveRightAndSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<!--<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop_CreateOnly}" />-->
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop_Move}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToCreatedDesktop_MoveAndSwitch}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<!--<controls:MouseShortcutBox Current="{Binding Source={x:Static services:KeyHelper.VirtualDesktopCreationKey}, Mode=OneWay}"
														   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Common_ProvidedByWinows, StringFormat=' ({0})', Mode=OneWay}"
														   IsReadOnly="True"
														   IsEnabled="False" />-->
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveNew.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveNewAndSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktop_Previous}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveToPrevious.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveToIndices.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveToIndices.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:MouseShortcutBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddMouseList"
													 MethodParameter="MoveToIndices"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastMouseList"
													 MethodParameter="MoveToIndices"
													 IsEnabled="{Binding IsMouseOfMoveToIndicesLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeMouseListToFit"
													 MethodParameter="MoveToIndices"
													 IsEnabled="{Binding IsMouseOfMoveToIndicesLarger}"
													 Margin="0" />
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktopAndSwitch}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MoveWindowToSpecifiedDesktopAndSwitch_Previous}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveToPreviousAndSwitch.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveToIndicesAndSwitch.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=MoveToIndicesAndSwitch.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:MouseShortcutBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddMouseList"
													 MethodParameter="MoveToIndicesAndSwitch"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastMouseList"
													 MethodParameter="MoveToIndicesAndSwitch"
													 IsEnabled="{Binding IsMouseOfMoveToIndicesAndSwitchLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeMouseListToFit"
													 MethodParameter="MoveToIndicesAndSwitch"
													 IsEnabled="{Binding IsMouseOfMoveToIndicesAndSwitchLarger}"
													 Margin="0" />
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MouseShortcut, StringFormat='{}{0} 3'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Grid.IsSharedSizeScope="True"
								Focusable="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_Left}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_Right}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_First}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapDesktop_Last}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwapDesktopLeft.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwapDesktopRight.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwapDesktopFirst.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwapDesktopLast.Value, Mode=TwoWay}" IsEnabled="{Binding IsReorderingSupport}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwapSpecifiedDesktop}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwapDesktopIndices.Value, Mode=TwoWay}"
										  Grid.Column="0"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock VerticalAlignment="Center"
												   Foreground="{DynamicResource ForegroundBrushKey}">
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0} {1}:">
													<Binding Source="{x:Static services:ResourceService.Current}" Path="Resources.Settings_Desktop" />
													<Binding Path="NumberText" />
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<ItemsControl ItemsSource="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=SwapDesktopIndices.Value, Mode=TwoWay}"
										  Grid.Column="2"
										  IsEnabled="{Binding IsReorderingSupport}"
										  Visibility="Visible">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="1" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<controls:MouseShortcutBox Current="{Binding Path='Value', Mode=TwoWay}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<metro2:CallMethodButton Grid.Column="0"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_Add}"
													 MethodTarget="{Binding}"
													 MethodName="AddMouseList"
													 MethodParameter="SwapDesktopIndices"
													 IsEnabled="{Binding IsReorderingSupport}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="2"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_RemoveLast}"
													 MethodTarget="{Binding}"
													 MethodName="RemoveLastMouseList"
													 MethodParameter="SwapDesktopIndices"
													 IsEnabled="{Binding IsMouseOfSwapDesktopIndicesLarger}"
													 Margin="0" />
							<metro2:CallMethodButton Grid.Column="4"
													 Content="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_SwitchSpecifiedDesktop_ResizeToFit}"
													 MethodTarget="{Binding}"
													 MethodName="ResizeMouseListToFit"
													 MethodParameter="SwapDesktopIndices"
													 IsEnabled="{Binding IsMouseOfSwapDesktopIndicesLarger}"
													 Margin="0" />
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_MouseShortcut, StringFormat='{}{0} 4'}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Focusable="True"
								Grid.IsSharedSizeScope="True">
						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinWindow}"
								   Style="{DynamicResource HeaderStyleKey}"
								   Margin="0,0,0,8" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Pin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Unpin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinToggle}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=Pin.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=Unpin.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=TogglePin.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinWindowFromApp}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Pin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Unpin}" />
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_PinToggle}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=PinApp.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=UnpinApp.Value, Mode=TwoWay}" />
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=TogglePinApp.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Border Height="16" />

						<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_OperateSylphyHorn}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ShowSettings}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=ShowSettings.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
						<Grid Margin="8,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="KeyHeader" />
								<ColumnDefinition Width="8" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<UniformGrid Columns="1">
								<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_ToggleDesktopNotification}" />
							</UniformGrid>
							<UniformGrid Grid.Column="2"
										 Columns="1">
								<controls:MouseShortcutBox Current="{Binding Source={x:Static serialization:Settings.MouseShortcut}, Path=ToggleDesktopNotification.Value, Mode=TwoWay}" />
							</UniformGrid>
						</Grid>
					</StackPanel>
				</ScrollViewer>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Log}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<DockPanel Margin="16,0,16,16">
					<TextBlock DockPanel.Dock="Top"
							   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_LogViewer}"
							   Style="{DynamicResource HeaderStyleKey}"
							   Margin="0,0,0,8" />
					<TextBlock DockPanel.Dock="Top"
							   Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_LogViewer_Description}"
							   Margin="8,0,0,8" />
					<ItemsControl ItemsSource="{Binding Logs}">
						<ItemsControl.Template>
							<ControlTemplate TargetType="{x:Type ItemsControl}">
								<ScrollViewer HorizontalScrollBarVisibility="Auto"
											  VerticalScrollBarVisibility="Visible">
									<StackPanel IsItemsHost="True"
												Margin="4" />
								</ScrollViewer>
							</ControlTemplate>
						</ItemsControl.Template>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Expander DockPanel.Dock="Top"
										  ExpandDirection="Down"
										  Margin="4">
									<Expander.Header>
										<TextBlock Style="{DynamicResource HeaderTextStyleKey}"
												   FontFamily="Consolas"
												   Text="{Binding Header}"
												   Margin="4,0" />
									</Expander.Header>
									<Border BorderBrush="{DynamicResource BorderBrushKey}"
											BorderThickness="0,.99"
											Padding="0,8"
											Margin="0,8,0,16">
										<TextBox Style="{DynamicResource ReadOnlyConsoleTextBoxStyle}"
												 Text="{Binding Content}" />
									</Border>
								</Expander>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</DockPanel>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="{Binding Source={x:Static services:ResourceService.Current}, Path=Resources.Settings_Version}"
							   Style="{DynamicResource TabitemStyleKey}" />
				</TabItem.Header>

				<ScrollViewer HorizontalScrollBarVisibility="Disabled"
							  VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="16,0,16,16"
								Focusable="True"
								Grid.IsSharedSizeScope="True">
						<TextBlock Text="{x:Static properties:ProductInfo.Title}"
								   Foreground="{DynamicResource ActiveForegroundBrushKey}"
								   FontFamily="Segoe UI Light, Meiryo UI"
								   FontSize="32"
								   Margin="0,-8,0,2" />
						<TextBlock Foreground="{DynamicResource ActiveForegroundBrushKey}"
								   FontFamily="Segoe UI Light, Meiryo UI"
								   FontSize="20"
								   Margin="1,6">
							<Run Text="{x:Static properties:ProductInfo.Description}" />
							<LineBreak />
							<Run Text="version" />
							<Run Text="{x:Static properties:ProductInfo.VersionString}" />
							<Run Text="{x:Static properties:ProductInfo.ExtraVersionString}" />
						</TextBlock>

						<TextBlock Text="Built using the Desktop Bridge."
								   Foreground="{DynamicResource ForegroundBrushKey}"
								   FontFamily="Segoe UI, Meiryo UI"
								   Visibility="{Binding Source={x:Static root:Application.IsWindowsBridge}, Converter={StaticResource BooleanToVisibilityConverter}}"
								   Margin="2,6" />

						<TextBlock Foreground="{DynamicResource ForegroundBrushKey}"
								   FontFamily="Segoe UI, Meiryo UI"
								   Margin="2,6">
							<Run Text="Source code:" />
							<metro2:HyperlinkEx Uri="https://github.com/hwtnb/SylphyHornPlusWin11">
								<Run Text="https://github.com/hwtnb/SylphyHornPlusWin11" />
							</metro2:HyperlinkEx>

							<LineBreak />

							<Run Text="Original source code:" />
							<metro2:HyperlinkEx Uri="https://github.com/Grabacr07/SylphyHorn">
								<Run Text="https://github.com/Grabacr07/SylphyHorn" />
							</metro2:HyperlinkEx>

							<LineBreak />

							<Run Text="Original developer:" />
							<metro2:HyperlinkEx Uri="https://twitter.com/Grabacr07">
								<Run Text="@Grabacr07" />
							</metro2:HyperlinkEx>
							<metro2:HyperlinkEx Uri="https://twitter.com/tmyt">
								<Run Text="@tmyt" />
							</metro2:HyperlinkEx>
						</TextBlock>

						<TextBlock Foreground="{DynamicResource ForegroundBrushKey}"
								   FontFamily="Segoe UI, Meiryo UI"
								   Margin="2,6">
							<Run Text="{Binding Source={x:Static properties:ProductInfo.Copyright}, Mode=OneWay}" />
							<LineBreak />
							<Run Text="{Binding Source={x:Static properties:ProductInfo.Product}, Mode=OneWay}" />
							<Run Text="is" />
							<Run Text="OSS"
								 ToolTip="Open Source Software" />
							<Run Text="released under" />
							<metro2:HyperlinkEx Uri="https://github.com/Grabacr07/SylphyHorn/blob/master/LICENSE.txt">
								<Run Text="The MIT License." />
							</metro2:HyperlinkEx>
						</TextBlock>

						<Border Background="{DynamicResource BorderBrushKey}"
								Height=".99"
								Margin="2,12,0,6" />

						<TextBlock Text="Licenses"
								   Style="{DynamicResource HeaderTextStyleKey}"
								   FontSize="16"
								   Margin="2,6" />

						<ItemsControl ItemsSource="{Binding Licenses}">
							<ItemsControl.Template>
								<ControlTemplate TargetType="{x:Type ItemsControl}">
									<StackPanel IsItemsHost="True"
												Margin="4,0" />
								</ControlTemplate>
							</ItemsControl.Template>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Expander DockPanel.Dock="Top"
											  ExpandDirection="Down"
											  Margin="4,2"
											  Style="{DynamicResource SimpleExpanderStyle}">
										<Expander.Resources>
											<Style x:Key="SimpleExpanderStyle"
												   TargetType="{x:Type Expander}">
												<Setter Property="OverridesDefaultStyle"
														Value="True" />
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Expander}">
															<Grid>
																<Grid.RowDefinitions>
																	<RowDefinition Height="Auto" />
																	<RowDefinition Height="Auto" />
																</Grid.RowDefinitions>
																<metro:ExpanderButton x:Name="ExpanderButton"
																					  Direction="Right"
																					  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
																					  Template="{DynamicResource SimpleExpanderButtonStyle}">
																	<metro:ExpanderButton.Resources>
																		<ControlTemplate x:Key="SimpleExpanderButtonStyle"
																						 TargetType="{x:Type metro:ExpanderButton}">
																			<Border Background="Transparent">
																				<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
																					<Grid.ColumnDefinitions>
																						<ColumnDefinition Width="Auto" />
																						<ColumnDefinition Width="*" />
																						<ColumnDefinition Width="Auto" />
																					</Grid.ColumnDefinitions>
																					<ContentPresenter x:Name="content"
																									  ContentTemplate="{TemplateBinding ContentTemplate}"
																									  Content="{TemplateBinding Content}"
																									  Grid.Column="1"
																									  ContentStringFormat="{TemplateBinding ContentStringFormat}"
																									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
																					<Grid x:Name="expander"
																						  Grid.Column="2"
																						  Height="16"
																						  Margin="5,0,0,0"
																						  Width="16">
																						<Path x:Name="arrow"
																							  Data="M1,1.5L4.5,5 8,1.5"
																							  HorizontalAlignment="Center"
																							  Stroke="{DynamicResource ForegroundBrushKey}"
																							  StrokeThickness="2"
																							  VerticalAlignment="Center" />
																					</Grid>
																				</Grid>
																			</Border>
																			<ControlTemplate.Triggers>
																				<Trigger Property="Direction"
																						 Value="Right">
																					<Setter Property="Grid.Column"
																							TargetName="expander"
																							Value="0" />
																					<Setter Property="Margin"
																							TargetName="expander"
																							Value="0,0,5,0" />
																				</Trigger>
																				<Trigger Property="IsMouseOver"
																						 Value="True">
																				</Trigger>
																				<Trigger Property="IsPressed"
																						 Value="True">
																					<Setter Property="Stroke"
																							TargetName="arrow"
																							Value="{DynamicResource HighlightForegroundBrushKey}" />
																				</Trigger>
																				<Trigger Property="IsChecked"
																						 Value="True">
																					<Setter Property="Data"
																							TargetName="arrow"
																							Value="M1,4.5L4.5,1 8,4.5" />
																				</Trigger>
																				<Trigger Property="IsEnabled"
																						 Value="False">
																					<Setter Property="Stroke"
																							TargetName="arrow"
																							Value="{DynamicResource InactiveForegroundBrushKey}" />
																					<Setter Property="Opacity"
																							TargetName="content"
																							Value="0.5" />
																				</Trigger>
																			</ControlTemplate.Triggers>
																		</ControlTemplate>
																	</metro:ExpanderButton.Resources>
																	<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
																					  Content="{TemplateBinding Header}"
																					  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
																					  ContentSource="Header"
																					  RecognizesAccessKey="True" />
																</metro:ExpanderButton>
																<ContentPresenter x:Name="Content"
																				  ContentTemplate="{TemplateBinding ContentTemplate}"
																				  Content="{TemplateBinding Content}"
																				  ContentStringFormat="{TemplateBinding ContentStringFormat}"
																				  Margin="{TemplateBinding Padding}"
																				  Grid.Row="1" />
															</Grid>
															<ControlTemplate.Triggers>
																<Trigger Property="IsExpanded"
																		 Value="False">
																	<Setter Property="Visibility"
																			TargetName="Content"
																			Value="Collapsed" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Expander.Resources>
										<Expander.Header>
											<TextBlock Style="{DynamicResource DefaultTextStyleKey}"
													   Text="{Binding Header}"
													   Margin="0,0" />
										</Expander.Header>
										<Border BorderBrush="{DynamicResource BorderBrushKey}"
												BorderThickness="0,.99"
												Padding="0,8"
												Margin="0,8,0,16">
											<TextBox Style="{DynamicResource ReadOnlyConsoleTextBoxStyle}"
													 Text="{Binding Content}" />
										</Border>
									</Expander>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</ScrollViewer>
			</TabItem>
		</TabControl>
	</DockPanel>
</metro:MetroWindow>
